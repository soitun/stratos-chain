// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: stratos/register/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types "github.com/cosmos/cosmos-sdk/codec/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types1 "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgCreateResourceNode encapsulates an MsgCreateResourceNodeTx transaction as an SDK message.
type MsgCreateResourceNode struct {
	NetworkAddress string      `protobuf:"bytes,1,opt,name=network_address,json=networkAddress,proto3" json:"network_address" yaml:"network_address"`
	Pubkey         *types.Any  `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey" yaml:"pubkey"`
	Value          types1.Coin `protobuf:"bytes,3,opt,name=value,proto3" json:"value" yaml:"value"`
	OwnerAddress   string      `protobuf:"bytes,4,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address" yaml:"owner_address"`
	Description    Description `protobuf:"bytes,5,opt,name=description,proto3" json:"description" yaml:"description"`
	NodeType       uint32      `protobuf:"varint,6,opt,name=node_type,json=nodeType,proto3" json:"node_type" yaml:"node_type"`
}

func (m *MsgCreateResourceNode) Reset()         { *m = MsgCreateResourceNode{} }
func (m *MsgCreateResourceNode) String() string { return proto.CompactTextString(m) }
func (*MsgCreateResourceNode) ProtoMessage()    {}
func (*MsgCreateResourceNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{0}
}
func (m *MsgCreateResourceNode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateResourceNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateResourceNode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateResourceNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateResourceNode.Merge(m, src)
}
func (m *MsgCreateResourceNode) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateResourceNode) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateResourceNode.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateResourceNode proto.InternalMessageInfo

func (m *MsgCreateResourceNode) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

func (m *MsgCreateResourceNode) GetPubkey() *types.Any {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *MsgCreateResourceNode) GetValue() types1.Coin {
	if m != nil {
		return m.Value
	}
	return types1.Coin{}
}

func (m *MsgCreateResourceNode) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *MsgCreateResourceNode) GetDescription() Description {
	if m != nil {
		return m.Description
	}
	return Description{}
}

func (m *MsgCreateResourceNode) GetNodeType() uint32 {
	if m != nil {
		return m.NodeType
	}
	return 0
}

// MsgCreateResourceNodeResponse defines the CreateResourceNodeTx response type
type MsgCreateResourceNodeResponse struct {
}

func (m *MsgCreateResourceNodeResponse) Reset()         { *m = MsgCreateResourceNodeResponse{} }
func (m *MsgCreateResourceNodeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateResourceNodeResponse) ProtoMessage()    {}
func (*MsgCreateResourceNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{1}
}
func (m *MsgCreateResourceNodeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateResourceNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateResourceNodeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateResourceNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateResourceNodeResponse.Merge(m, src)
}
func (m *MsgCreateResourceNodeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateResourceNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateResourceNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateResourceNodeResponse proto.InternalMessageInfo

// MsgCreateMetaNode encapsulates an MsgCreateMetaNodeTx transaction as an SDK message.
type MsgCreateMetaNode struct {
	NetworkAddress string      `protobuf:"bytes,1,opt,name=network_address,json=networkAddress,proto3" json:"network_address" yaml:"network_address"`
	Pubkey         *types.Any  `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey" yaml:"pubkey"`
	Value          types1.Coin `protobuf:"bytes,3,opt,name=value,proto3" json:"value" yaml:"value"`
	OwnerAddress   string      `protobuf:"bytes,4,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address" yaml:"owner_address"`
	Description    Description `protobuf:"bytes,5,opt,name=description,proto3" json:"description" yaml:"description"`
}

func (m *MsgCreateMetaNode) Reset()         { *m = MsgCreateMetaNode{} }
func (m *MsgCreateMetaNode) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMetaNode) ProtoMessage()    {}
func (*MsgCreateMetaNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{2}
}
func (m *MsgCreateMetaNode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMetaNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMetaNode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMetaNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMetaNode.Merge(m, src)
}
func (m *MsgCreateMetaNode) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMetaNode) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMetaNode.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMetaNode proto.InternalMessageInfo

func (m *MsgCreateMetaNode) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

func (m *MsgCreateMetaNode) GetPubkey() *types.Any {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *MsgCreateMetaNode) GetValue() types1.Coin {
	if m != nil {
		return m.Value
	}
	return types1.Coin{}
}

func (m *MsgCreateMetaNode) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *MsgCreateMetaNode) GetDescription() Description {
	if m != nil {
		return m.Description
	}
	return Description{}
}

// MsgCreateMetaNodeResponse defines the CreateMetaNode response type
type MsgCreateMetaNodeResponse struct {
}

func (m *MsgCreateMetaNodeResponse) Reset()         { *m = MsgCreateMetaNodeResponse{} }
func (m *MsgCreateMetaNodeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMetaNodeResponse) ProtoMessage()    {}
func (*MsgCreateMetaNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{3}
}
func (m *MsgCreateMetaNodeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMetaNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMetaNodeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMetaNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMetaNodeResponse.Merge(m, src)
}
func (m *MsgCreateMetaNodeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMetaNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMetaNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMetaNodeResponse proto.InternalMessageInfo

// MsgRemoveResourceNode - encapsulates an RemoveResourceNode transaction as an SDK message
type MsgRemoveResourceNode struct {
	ResourceNodeAddress string `protobuf:"bytes,1,opt,name=resource_node_address,json=resourceNodeAddress,proto3" json:"resource_node_address" yaml:"resource_node_address"`
	OwnerAddress        string `protobuf:"bytes,2,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address" yaml:"owner_address"`
}

func (m *MsgRemoveResourceNode) Reset()         { *m = MsgRemoveResourceNode{} }
func (m *MsgRemoveResourceNode) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveResourceNode) ProtoMessage()    {}
func (*MsgRemoveResourceNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{4}
}
func (m *MsgRemoveResourceNode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveResourceNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveResourceNode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveResourceNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveResourceNode.Merge(m, src)
}
func (m *MsgRemoveResourceNode) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveResourceNode) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveResourceNode.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveResourceNode proto.InternalMessageInfo

func (m *MsgRemoveResourceNode) GetResourceNodeAddress() string {
	if m != nil {
		return m.ResourceNodeAddress
	}
	return ""
}

func (m *MsgRemoveResourceNode) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

// MsgRemoveResourceNodeResponse defines the Msg/RemoveResourceNode response type.
type MsgRemoveResourceNodeResponse struct {
}

func (m *MsgRemoveResourceNodeResponse) Reset()         { *m = MsgRemoveResourceNodeResponse{} }
func (m *MsgRemoveResourceNodeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveResourceNodeResponse) ProtoMessage()    {}
func (*MsgRemoveResourceNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{5}
}
func (m *MsgRemoveResourceNodeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveResourceNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveResourceNodeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveResourceNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveResourceNodeResponse.Merge(m, src)
}
func (m *MsgRemoveResourceNodeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveResourceNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveResourceNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveResourceNodeResponse proto.InternalMessageInfo

// MsgRemoveMetaNode - encapsulates an MsgRemoveMetaNode transaction as an SDK message
type MsgRemoveMetaNode struct {
	MetaNodeAddress string `protobuf:"bytes,1,opt,name=meta_node_address,json=metaNodeAddress,proto3" json:"meta_node_address" yaml:"meta_node_address"`
	OwnerAddress    string `protobuf:"bytes,2,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address" yaml:"owner_address"`
}

func (m *MsgRemoveMetaNode) Reset()         { *m = MsgRemoveMetaNode{} }
func (m *MsgRemoveMetaNode) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveMetaNode) ProtoMessage()    {}
func (*MsgRemoveMetaNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{6}
}
func (m *MsgRemoveMetaNode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveMetaNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveMetaNode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveMetaNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveMetaNode.Merge(m, src)
}
func (m *MsgRemoveMetaNode) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveMetaNode) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveMetaNode.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveMetaNode proto.InternalMessageInfo

func (m *MsgRemoveMetaNode) GetMetaNodeAddress() string {
	if m != nil {
		return m.MetaNodeAddress
	}
	return ""
}

func (m *MsgRemoveMetaNode) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

// MsgRemoveMetaNodeResponse defines the Msg/RemoveMetaNode response type.
type MsgRemoveMetaNodeResponse struct {
}

func (m *MsgRemoveMetaNodeResponse) Reset()         { *m = MsgRemoveMetaNodeResponse{} }
func (m *MsgRemoveMetaNodeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveMetaNodeResponse) ProtoMessage()    {}
func (*MsgRemoveMetaNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{7}
}
func (m *MsgRemoveMetaNodeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveMetaNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveMetaNodeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveMetaNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveMetaNodeResponse.Merge(m, src)
}
func (m *MsgRemoveMetaNodeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveMetaNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveMetaNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveMetaNodeResponse proto.InternalMessageInfo

// MsgUpdateResourceNode defines a SDK message for updating an existing resource node.
type MsgUpdateResourceNode struct {
	Description    Description `protobuf:"bytes,1,opt,name=description,proto3" json:"description" yaml:"description"`
	NetworkAddress string      `protobuf:"bytes,2,opt,name=network_address,json=networkAddress,proto3" json:"network_address" yaml:"network_address"`
	OwnerAddress   string      `protobuf:"bytes,3,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address" yaml:"owner_address"`
	NodeType       uint32      `protobuf:"varint,4,opt,name=node_type,json=nodeType,proto3" json:"node_type" yaml:"node_type"`
}

func (m *MsgUpdateResourceNode) Reset()         { *m = MsgUpdateResourceNode{} }
func (m *MsgUpdateResourceNode) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateResourceNode) ProtoMessage()    {}
func (*MsgUpdateResourceNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{8}
}
func (m *MsgUpdateResourceNode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateResourceNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateResourceNode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateResourceNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateResourceNode.Merge(m, src)
}
func (m *MsgUpdateResourceNode) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateResourceNode) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateResourceNode.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateResourceNode proto.InternalMessageInfo

func (m *MsgUpdateResourceNode) GetDescription() Description {
	if m != nil {
		return m.Description
	}
	return Description{}
}

func (m *MsgUpdateResourceNode) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

func (m *MsgUpdateResourceNode) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *MsgUpdateResourceNode) GetNodeType() uint32 {
	if m != nil {
		return m.NodeType
	}
	return 0
}

// MsgUpdateResourceNodeResponse defines the Msg/UpdateResourceNode response type.
type MsgUpdateResourceNodeResponse struct {
}

func (m *MsgUpdateResourceNodeResponse) Reset()         { *m = MsgUpdateResourceNodeResponse{} }
func (m *MsgUpdateResourceNodeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateResourceNodeResponse) ProtoMessage()    {}
func (*MsgUpdateResourceNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{9}
}
func (m *MsgUpdateResourceNodeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateResourceNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateResourceNodeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateResourceNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateResourceNodeResponse.Merge(m, src)
}
func (m *MsgUpdateResourceNodeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateResourceNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateResourceNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateResourceNodeResponse proto.InternalMessageInfo

// MsgUpdateMetaNode defines a SDK message for updating an existing meta node.
type MsgUpdateMetaNode struct {
	Description    Description `protobuf:"bytes,1,opt,name=description,proto3" json:"description" yaml:"description"`
	NetworkAddress string      `protobuf:"bytes,2,opt,name=network_address,json=networkAddress,proto3" json:"network_address" yaml:"network_address"`
	OwnerAddress   string      `protobuf:"bytes,3,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address" yaml:"owner_address"`
}

func (m *MsgUpdateMetaNode) Reset()         { *m = MsgUpdateMetaNode{} }
func (m *MsgUpdateMetaNode) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMetaNode) ProtoMessage()    {}
func (*MsgUpdateMetaNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{10}
}
func (m *MsgUpdateMetaNode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMetaNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMetaNode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMetaNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMetaNode.Merge(m, src)
}
func (m *MsgUpdateMetaNode) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMetaNode) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMetaNode.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMetaNode proto.InternalMessageInfo

func (m *MsgUpdateMetaNode) GetDescription() Description {
	if m != nil {
		return m.Description
	}
	return Description{}
}

func (m *MsgUpdateMetaNode) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

func (m *MsgUpdateMetaNode) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

// MsgUpdateMetaNodeResponse defines the Msg/UpdateMetaNode response type.
type MsgUpdateMetaNodeResponse struct {
}

func (m *MsgUpdateMetaNodeResponse) Reset()         { *m = MsgUpdateMetaNodeResponse{} }
func (m *MsgUpdateMetaNodeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMetaNodeResponse) ProtoMessage()    {}
func (*MsgUpdateMetaNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{11}
}
func (m *MsgUpdateMetaNodeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMetaNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMetaNodeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMetaNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMetaNodeResponse.Merge(m, src)
}
func (m *MsgUpdateMetaNodeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMetaNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMetaNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMetaNodeResponse proto.InternalMessageInfo

// MsgUpdateResourceNodeDeposit defines a SDK message for updating the deposit of an existing resource node.
type MsgUpdateResourceNodeDeposit struct {
	NetworkAddress string      `protobuf:"bytes,1,opt,name=network_address,json=networkAddress,proto3" json:"network_address" yaml:"network_address"`
	OwnerAddress   string      `protobuf:"bytes,2,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address" yaml:"owner_address"`
	DepositDelta   types1.Coin `protobuf:"bytes,3,opt,name=deposit_delta,json=depositDelta,proto3" json:"deposit_delta" yaml:"deposit_delta"`
}

func (m *MsgUpdateResourceNodeDeposit) Reset()         { *m = MsgUpdateResourceNodeDeposit{} }
func (m *MsgUpdateResourceNodeDeposit) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateResourceNodeDeposit) ProtoMessage()    {}
func (*MsgUpdateResourceNodeDeposit) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{12}
}
func (m *MsgUpdateResourceNodeDeposit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateResourceNodeDeposit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateResourceNodeDeposit.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateResourceNodeDeposit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateResourceNodeDeposit.Merge(m, src)
}
func (m *MsgUpdateResourceNodeDeposit) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateResourceNodeDeposit) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateResourceNodeDeposit.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateResourceNodeDeposit proto.InternalMessageInfo

func (m *MsgUpdateResourceNodeDeposit) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

func (m *MsgUpdateResourceNodeDeposit) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *MsgUpdateResourceNodeDeposit) GetDepositDelta() types1.Coin {
	if m != nil {
		return m.DepositDelta
	}
	return types1.Coin{}
}

// MsgUpdateResourceNodeDepositResponse defines the Msg/UpdateResourceNodeDeposit response type.
type MsgUpdateResourceNodeDepositResponse struct {
}

func (m *MsgUpdateResourceNodeDepositResponse) Reset()         { *m = MsgUpdateResourceNodeDepositResponse{} }
func (m *MsgUpdateResourceNodeDepositResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateResourceNodeDepositResponse) ProtoMessage()    {}
func (*MsgUpdateResourceNodeDepositResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{13}
}
func (m *MsgUpdateResourceNodeDepositResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateResourceNodeDepositResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateResourceNodeDepositResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateResourceNodeDepositResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateResourceNodeDepositResponse.Merge(m, src)
}
func (m *MsgUpdateResourceNodeDepositResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateResourceNodeDepositResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateResourceNodeDepositResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateResourceNodeDepositResponse proto.InternalMessageInfo

// MsgUpdateEffectiveDeposit defines a SDK message for updating the effective deposit of an existing resource node.
type MsgUpdateEffectiveDeposit struct {
	Reporters       []string                               `protobuf:"bytes,1,rep,name=reporters,proto3" json:"reporters" yaml:"reporters"`
	ReporterOwner   []string                               `protobuf:"bytes,2,rep,name=reporter_owner,json=reporterOwner,proto3" json:"reporter_owner" yaml:"reporter_owner"`
	NetworkAddress  string                                 `protobuf:"bytes,3,opt,name=network_address,json=networkAddress,proto3" json:"network_address" yaml:"network_address"`
	EffectiveTokens github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,4,opt,name=effective_tokens,json=effectiveTokens,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"effective_tokens" yaml:"effective_tokens"`
}

func (m *MsgUpdateEffectiveDeposit) Reset()         { *m = MsgUpdateEffectiveDeposit{} }
func (m *MsgUpdateEffectiveDeposit) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateEffectiveDeposit) ProtoMessage()    {}
func (*MsgUpdateEffectiveDeposit) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{14}
}
func (m *MsgUpdateEffectiveDeposit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateEffectiveDeposit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateEffectiveDeposit.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateEffectiveDeposit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateEffectiveDeposit.Merge(m, src)
}
func (m *MsgUpdateEffectiveDeposit) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateEffectiveDeposit) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateEffectiveDeposit.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateEffectiveDeposit proto.InternalMessageInfo

func (m *MsgUpdateEffectiveDeposit) GetReporters() []string {
	if m != nil {
		return m.Reporters
	}
	return nil
}

func (m *MsgUpdateEffectiveDeposit) GetReporterOwner() []string {
	if m != nil {
		return m.ReporterOwner
	}
	return nil
}

func (m *MsgUpdateEffectiveDeposit) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

// MsgUpdateEffectiveDepositResponse defines the Msg/UpdateEffectiveDeposit response type.
type MsgUpdateEffectiveDepositResponse struct {
}

func (m *MsgUpdateEffectiveDepositResponse) Reset()         { *m = MsgUpdateEffectiveDepositResponse{} }
func (m *MsgUpdateEffectiveDepositResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateEffectiveDepositResponse) ProtoMessage()    {}
func (*MsgUpdateEffectiveDepositResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{15}
}
func (m *MsgUpdateEffectiveDepositResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateEffectiveDepositResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateEffectiveDepositResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateEffectiveDepositResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateEffectiveDepositResponse.Merge(m, src)
}
func (m *MsgUpdateEffectiveDepositResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateEffectiveDepositResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateEffectiveDepositResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateEffectiveDepositResponse proto.InternalMessageInfo

// MsgUpdateMetaNodeDeposit defines a SDK message for updating the deposit of an existing meta node.
type MsgUpdateMetaNodeDeposit struct {
	NetworkAddress string      `protobuf:"bytes,1,opt,name=network_address,json=networkAddress,proto3" json:"network_address" yaml:"network_address"`
	OwnerAddress   string      `protobuf:"bytes,2,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address" yaml:"owner_address"`
	DepositDelta   types1.Coin `protobuf:"bytes,3,opt,name=deposit_delta,json=depositDelta,proto3" json:"deposit_delta" yaml:"deposit_delta"`
}

func (m *MsgUpdateMetaNodeDeposit) Reset()         { *m = MsgUpdateMetaNodeDeposit{} }
func (m *MsgUpdateMetaNodeDeposit) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMetaNodeDeposit) ProtoMessage()    {}
func (*MsgUpdateMetaNodeDeposit) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{16}
}
func (m *MsgUpdateMetaNodeDeposit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMetaNodeDeposit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMetaNodeDeposit.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMetaNodeDeposit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMetaNodeDeposit.Merge(m, src)
}
func (m *MsgUpdateMetaNodeDeposit) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMetaNodeDeposit) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMetaNodeDeposit.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMetaNodeDeposit proto.InternalMessageInfo

func (m *MsgUpdateMetaNodeDeposit) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

func (m *MsgUpdateMetaNodeDeposit) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *MsgUpdateMetaNodeDeposit) GetDepositDelta() types1.Coin {
	if m != nil {
		return m.DepositDelta
	}
	return types1.Coin{}
}

// MsgUpdateMetaNodeDepositResponse defines the Msg/UpdateMetaNodeDeposit response type.
type MsgUpdateMetaNodeDepositResponse struct {
}

func (m *MsgUpdateMetaNodeDepositResponse) Reset()         { *m = MsgUpdateMetaNodeDepositResponse{} }
func (m *MsgUpdateMetaNodeDepositResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMetaNodeDepositResponse) ProtoMessage()    {}
func (*MsgUpdateMetaNodeDepositResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{17}
}
func (m *MsgUpdateMetaNodeDepositResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMetaNodeDepositResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMetaNodeDepositResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMetaNodeDepositResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMetaNodeDepositResponse.Merge(m, src)
}
func (m *MsgUpdateMetaNodeDepositResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMetaNodeDepositResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMetaNodeDepositResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMetaNodeDepositResponse proto.InternalMessageInfo

// MsgMetaNodeRegistrationVote defines a SDK message for registration vote of an existing meta node.
type MsgMetaNodeRegistrationVote struct {
	CandidateNetworkAddress string `protobuf:"bytes,1,opt,name=candidate_network_address,json=candidateNetworkAddress,proto3" json:"candidate_network_address" yaml:"candidate_network_address"`
	CandidateOwnerAddress   string `protobuf:"bytes,2,opt,name=candidate_owner_address,json=candidateOwnerAddress,proto3" json:"candidate_owner_address" yaml:"candidate_owner_address"`
	Opinion                 bool   `protobuf:"varint,3,opt,name=opinion,proto3" json:"opinion" yaml:"opinion"`
	VoterNetworkAddress     string `protobuf:"bytes,4,opt,name=voter_network_address,json=voterNetworkAddress,proto3" json:"voter_network_address" yaml:"voter_network_address"`
	VoterOwnerAddress       string `protobuf:"bytes,5,opt,name=voter_owner_address,json=voterOwnerAddress,proto3" json:"voter_owner_address" yaml:"voter_owner_address"`
}

func (m *MsgMetaNodeRegistrationVote) Reset()         { *m = MsgMetaNodeRegistrationVote{} }
func (m *MsgMetaNodeRegistrationVote) String() string { return proto.CompactTextString(m) }
func (*MsgMetaNodeRegistrationVote) ProtoMessage()    {}
func (*MsgMetaNodeRegistrationVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{18}
}
func (m *MsgMetaNodeRegistrationVote) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMetaNodeRegistrationVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMetaNodeRegistrationVote.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMetaNodeRegistrationVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMetaNodeRegistrationVote.Merge(m, src)
}
func (m *MsgMetaNodeRegistrationVote) XXX_Size() int {
	return m.Size()
}
func (m *MsgMetaNodeRegistrationVote) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMetaNodeRegistrationVote.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMetaNodeRegistrationVote proto.InternalMessageInfo

func (m *MsgMetaNodeRegistrationVote) GetCandidateNetworkAddress() string {
	if m != nil {
		return m.CandidateNetworkAddress
	}
	return ""
}

func (m *MsgMetaNodeRegistrationVote) GetCandidateOwnerAddress() string {
	if m != nil {
		return m.CandidateOwnerAddress
	}
	return ""
}

func (m *MsgMetaNodeRegistrationVote) GetOpinion() bool {
	if m != nil {
		return m.Opinion
	}
	return false
}

func (m *MsgMetaNodeRegistrationVote) GetVoterNetworkAddress() string {
	if m != nil {
		return m.VoterNetworkAddress
	}
	return ""
}

func (m *MsgMetaNodeRegistrationVote) GetVoterOwnerAddress() string {
	if m != nil {
		return m.VoterOwnerAddress
	}
	return ""
}

// MsgMetaNodeRegistrationVoteResponse defines the Msg/MetaNodeRegistrationVote response type.
type MsgMetaNodeRegistrationVoteResponse struct {
}

func (m *MsgMetaNodeRegistrationVoteResponse) Reset()         { *m = MsgMetaNodeRegistrationVoteResponse{} }
func (m *MsgMetaNodeRegistrationVoteResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMetaNodeRegistrationVoteResponse) ProtoMessage()    {}
func (*MsgMetaNodeRegistrationVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{19}
}
func (m *MsgMetaNodeRegistrationVoteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMetaNodeRegistrationVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMetaNodeRegistrationVoteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMetaNodeRegistrationVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMetaNodeRegistrationVoteResponse.Merge(m, src)
}
func (m *MsgMetaNodeRegistrationVoteResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMetaNodeRegistrationVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMetaNodeRegistrationVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMetaNodeRegistrationVoteResponse proto.InternalMessageInfo

// MsgWithdrawMetaNodeRegistrationDeposit defines a SDK message for withdrawing registration deposit of meta node.
type MsgWithdrawMetaNodeRegistrationDeposit struct {
	NetworkAddress string `protobuf:"bytes,1,opt,name=network_address,json=networkAddress,proto3" json:"network_address" yaml:"network_address"`
	OwnerAddress   string `protobuf:"bytes,2,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address" yaml:"owner_address"`
}

func (m *MsgWithdrawMetaNodeRegistrationDeposit) Reset() {
	*m = MsgWithdrawMetaNodeRegistrationDeposit{}
}
func (m *MsgWithdrawMetaNodeRegistrationDeposit) String() string { return proto.CompactTextString(m) }
func (*MsgWithdrawMetaNodeRegistrationDeposit) ProtoMessage()    {}
func (*MsgWithdrawMetaNodeRegistrationDeposit) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{20}
}
func (m *MsgWithdrawMetaNodeRegistrationDeposit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithdrawMetaNodeRegistrationDeposit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithdrawMetaNodeRegistrationDeposit.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithdrawMetaNodeRegistrationDeposit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdrawMetaNodeRegistrationDeposit.Merge(m, src)
}
func (m *MsgWithdrawMetaNodeRegistrationDeposit) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithdrawMetaNodeRegistrationDeposit) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdrawMetaNodeRegistrationDeposit.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdrawMetaNodeRegistrationDeposit proto.InternalMessageInfo

func (m *MsgWithdrawMetaNodeRegistrationDeposit) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

func (m *MsgWithdrawMetaNodeRegistrationDeposit) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

// MsgWithdrawMetaNodeRegistrationDepositResponse defines the Msg/WithdrawMetaNodeRegistrationDeposit response type.
type MsgWithdrawMetaNodeRegistrationDepositResponse struct {
}

func (m *MsgWithdrawMetaNodeRegistrationDepositResponse) Reset() {
	*m = MsgWithdrawMetaNodeRegistrationDepositResponse{}
}
func (m *MsgWithdrawMetaNodeRegistrationDepositResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgWithdrawMetaNodeRegistrationDepositResponse) ProtoMessage() {}
func (*MsgWithdrawMetaNodeRegistrationDepositResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_75d4b90d7a185a31, []int{21}
}
func (m *MsgWithdrawMetaNodeRegistrationDepositResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithdrawMetaNodeRegistrationDepositResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithdrawMetaNodeRegistrationDepositResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithdrawMetaNodeRegistrationDepositResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdrawMetaNodeRegistrationDepositResponse.Merge(m, src)
}
func (m *MsgWithdrawMetaNodeRegistrationDepositResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithdrawMetaNodeRegistrationDepositResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdrawMetaNodeRegistrationDepositResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdrawMetaNodeRegistrationDepositResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateResourceNode)(nil), "stratos.register.v1.MsgCreateResourceNode")
	proto.RegisterType((*MsgCreateResourceNodeResponse)(nil), "stratos.register.v1.MsgCreateResourceNodeResponse")
	proto.RegisterType((*MsgCreateMetaNode)(nil), "stratos.register.v1.MsgCreateMetaNode")
	proto.RegisterType((*MsgCreateMetaNodeResponse)(nil), "stratos.register.v1.MsgCreateMetaNodeResponse")
	proto.RegisterType((*MsgRemoveResourceNode)(nil), "stratos.register.v1.MsgRemoveResourceNode")
	proto.RegisterType((*MsgRemoveResourceNodeResponse)(nil), "stratos.register.v1.MsgRemoveResourceNodeResponse")
	proto.RegisterType((*MsgRemoveMetaNode)(nil), "stratos.register.v1.MsgRemoveMetaNode")
	proto.RegisterType((*MsgRemoveMetaNodeResponse)(nil), "stratos.register.v1.MsgRemoveMetaNodeResponse")
	proto.RegisterType((*MsgUpdateResourceNode)(nil), "stratos.register.v1.MsgUpdateResourceNode")
	proto.RegisterType((*MsgUpdateResourceNodeResponse)(nil), "stratos.register.v1.MsgUpdateResourceNodeResponse")
	proto.RegisterType((*MsgUpdateMetaNode)(nil), "stratos.register.v1.MsgUpdateMetaNode")
	proto.RegisterType((*MsgUpdateMetaNodeResponse)(nil), "stratos.register.v1.MsgUpdateMetaNodeResponse")
	proto.RegisterType((*MsgUpdateResourceNodeDeposit)(nil), "stratos.register.v1.MsgUpdateResourceNodeDeposit")
	proto.RegisterType((*MsgUpdateResourceNodeDepositResponse)(nil), "stratos.register.v1.MsgUpdateResourceNodeDepositResponse")
	proto.RegisterType((*MsgUpdateEffectiveDeposit)(nil), "stratos.register.v1.MsgUpdateEffectiveDeposit")
	proto.RegisterType((*MsgUpdateEffectiveDepositResponse)(nil), "stratos.register.v1.MsgUpdateEffectiveDepositResponse")
	proto.RegisterType((*MsgUpdateMetaNodeDeposit)(nil), "stratos.register.v1.MsgUpdateMetaNodeDeposit")
	proto.RegisterType((*MsgUpdateMetaNodeDepositResponse)(nil), "stratos.register.v1.MsgUpdateMetaNodeDepositResponse")
	proto.RegisterType((*MsgMetaNodeRegistrationVote)(nil), "stratos.register.v1.MsgMetaNodeRegistrationVote")
	proto.RegisterType((*MsgMetaNodeRegistrationVoteResponse)(nil), "stratos.register.v1.MsgMetaNodeRegistrationVoteResponse")
	proto.RegisterType((*MsgWithdrawMetaNodeRegistrationDeposit)(nil), "stratos.register.v1.MsgWithdrawMetaNodeRegistrationDeposit")
	proto.RegisterType((*MsgWithdrawMetaNodeRegistrationDepositResponse)(nil), "stratos.register.v1.MsgWithdrawMetaNodeRegistrationDepositResponse")
}

func init() { proto.RegisterFile("stratos/register/v1/tx.proto", fileDescriptor_75d4b90d7a185a31) }

var fileDescriptor_75d4b90d7a185a31 = []byte{
	// 1656 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x59, 0x41, 0x6c, 0x14, 0x47,
	0x16, 0x75, 0xcf, 0xd8, 0x2c, 0x2e, 0x30, 0xe0, 0xc1, 0x5e, 0x8f, 0x07, 0x33, 0x65, 0x37, 0xe0,
	0xf5, 0x7a, 0xd7, 0xdd, 0xb6, 0x81, 0x05, 0x9b, 0x15, 0x5a, 0xc6, 0x46, 0x5a, 0xb4, 0x32, 0xec,
	0x0e, 0xb0, 0x28, 0xb9, 0x8c, 0xda, 0x33, 0xe5, 0xa1, 0x63, 0x4f, 0xd7, 0xa8, 0xbb, 0xc7, 0x66,
	0x0e, 0x91, 0x22, 0xa4, 0x5c, 0x22, 0x45, 0x0a, 0x8a, 0x72, 0xca, 0x21, 0x39, 0x44, 0x09, 0xb9,
	0xf9, 0x90, 0x2b, 0x52, 0x6e, 0x81, 0x48, 0x91, 0x50, 0x72, 0x49, 0x72, 0x28, 0x45, 0x26, 0x12,
	0xd2, 0x1c, 0xe7, 0x90, 0x73, 0xd4, 0xd5, 0xd5, 0xd5, 0xd3, 0xdd, 0xd5, 0xcd, 0x58, 0x89, 0x7d,
	0x88, 0x7c, 0x81, 0xe9, 0xff, 0x5f, 0x75, 0xbd, 0xff, 0xff, 0xfb, 0xd5, 0x55, 0x65, 0x30, 0x66,
	0xd9, 0xa6, 0x66, 0x63, 0x4b, 0x35, 0x51, 0x55, 0xb7, 0x6c, 0x64, 0xaa, 0x9b, 0x73, 0xaa, 0xfd,
	0x40, 0xa9, 0x9b, 0xd8, 0xc6, 0x99, 0x93, 0xcc, 0xab, 0x78, 0x5e, 0x65, 0x73, 0x2e, 0x37, 0x54,
	0xc5, 0x55, 0x4c, 0xfd, 0xaa, 0xf3, 0xcb, 0x85, 0xe6, 0x46, 0xcb, 0xd8, 0xaa, 0x61, 0xab, 0xe4,
	0x3a, 0xdc, 0x07, 0xe6, 0x1a, 0xd4, 0x6a, 0xba, 0x81, 0x55, 0xfa, 0x2f, 0x33, 0x8d, 0xb8, 0x00,
	0xb5, 0x66, 0x55, 0x9d, 0x09, 0x6b, 0x56, 0xd5, 0x7b, 0x4d, 0x15, 0xe3, 0xea, 0x06, 0x52, 0xe9,
	0xd3, 0x6a, 0x63, 0x4d, 0xd5, 0x8c, 0x26, 0x73, 0x8d, 0x31, 0x97, 0x56, 0xd7, 0x55, 0xcd, 0x30,
	0xb0, 0xad, 0xd9, 0x3a, 0x36, 0xbc, 0x49, 0x64, 0x51, 0x20, 0x9c, 0xb6, 0x8b, 0xc9, 0xb3, 0x59,
	0x57, 0x35, 0x0b, 0xa9, 0x9b, 0x73, 0xab, 0xc8, 0xd6, 0xe6, 0xd4, 0x32, 0xd6, 0x0d, 0xd7, 0x2f,
	0x3f, 0xea, 0x03, 0xc3, 0x2b, 0x56, 0x75, 0xc9, 0x44, 0x9a, 0x8d, 0x8a, 0xc8, 0xc2, 0x0d, 0xb3,
	0x8c, 0x6e, 0xe2, 0x0a, 0xca, 0x18, 0xe0, 0xb8, 0x81, 0xec, 0x2d, 0x6c, 0xae, 0x97, 0xb4, 0x4a,
	0xc5, 0x44, 0x96, 0x95, 0x95, 0xc6, 0xa5, 0xa9, 0xfe, 0xc2, 0xf5, 0x16, 0x81, 0x61, 0x57, 0x9b,
	0xc0, 0x3f, 0x37, 0xb5, 0xda, 0xc6, 0xa2, 0x1c, 0x72, 0xc8, 0xdf, 0x7e, 0x31, 0x33, 0xc4, 0x52,
	0x73, 0xcd, 0x35, 0xdd, 0xb6, 0x4d, 0xdd, 0xa8, 0x16, 0x8f, 0x31, 0x24, 0xb3, 0x66, 0x34, 0x70,
	0xa8, 0xde, 0x58, 0x5d, 0x47, 0xcd, 0x6c, 0x6a, 0x5c, 0x9a, 0x3a, 0x32, 0x3f, 0xa4, 0xb8, 0xc1,
	0x2b, 0x5e, 0x5e, 0x94, 0x6b, 0x46, 0xb3, 0x70, 0xbe, 0x45, 0x20, 0xc3, 0xb5, 0x09, 0x1c, 0x70,
	0xe7, 0x74, 0x9f, 0xe5, 0xaf, 0xfd, 0xa9, 0xca, 0x66, 0xb3, 0x6e, 0x63, 0xe5, 0xbf, 0x8d, 0xd5,
	0xff, 0xa0, 0x66, 0x91, 0x0d, 0xc8, 0xdc, 0x06, 0x7d, 0x9b, 0xda, 0x46, 0x03, 0x65, 0xd3, 0x74,
	0x86, 0x51, 0x85, 0xa1, 0x9d, 0xe4, 0x28, 0x2c, 0x39, 0xca, 0x12, 0xd6, 0x8d, 0x82, 0xfc, 0x94,
	0xc0, 0x9e, 0x16, 0x81, 0x2e, 0xbe, 0x4d, 0xe0, 0x51, 0x77, 0x26, 0xfa, 0x28, 0x3f, 0x7e, 0xb9,
	0x3d, 0x2d, 0x15, 0x5d, 0x5f, 0x66, 0x0d, 0x0c, 0xe0, 0x2d, 0x03, 0x99, 0x3c, 0x4b, 0xbd, 0x34,
	0x4b, 0xd7, 0x5a, 0x04, 0x06, 0x1d, 0x6d, 0x02, 0x87, 0xdc, 0xb7, 0x04, 0xcc, 0xf1, 0x19, 0x3a,
	0x4a, 0x71, 0x5e, 0x7e, 0x4c, 0x70, 0xa4, 0x82, 0xac, 0xb2, 0xa9, 0xd7, 0x1d, 0x0d, 0x64, 0xfb,
	0x68, 0x08, 0xe3, 0x8a, 0x40, 0xae, 0xca, 0xb2, 0x8f, 0x2b, 0x28, 0x2c, 0x92, 0xce, 0xc1, 0x6d,
	0x02, 0x33, 0x2e, 0x93, 0x0e, 0x23, 0x8b, 0xaa, 0x13, 0x97, 0xb9, 0x0a, 0xfa, 0x0d, 0x5c, 0x41,
	0x25, 0xbb, 0x59, 0x47, 0xd9, 0x43, 0xe3, 0xd2, 0xd4, 0x40, 0x61, 0xa2, 0x45, 0xa0, 0x6f, 0x6c,
	0x13, 0x78, 0x82, 0xd5, 0xdd, 0x33, 0xc9, 0xc5, 0xc3, 0xce, 0xef, 0x3b, 0xcd, 0x3a, 0x5a, 0xbc,
	0xf0, 0xf0, 0xe5, 0xf6, 0x74, 0x30, 0x0b, 0xef, 0xbc, 0xdc, 0x9e, 0x3e, 0xed, 0x09, 0x57, 0xa8,
	0x3c, 0x19, 0x82, 0xd3, 0x42, 0x47, 0x11, 0x59, 0x75, 0x6c, 0x58, 0x48, 0x7e, 0xd6, 0x0b, 0x06,
	0x39, 0x62, 0x05, 0xd9, 0xda, 0x81, 0x60, 0x0f, 0x04, 0xeb, 0x98, 0x16, 0x67, 0xc5, 0x82, 0x1b,
	0x8d, 0x08, 0xce, 0x53, 0x8d, 0x7c, 0x0a, 0x8c, 0x46, 0x8c, 0x5c, 0x68, 0x4f, 0x52, 0x74, 0x75,
	0x2c, 0xa2, 0x1a, 0xde, 0x0c, 0xae, 0x8e, 0x6f, 0x4b, 0x60, 0xd8, 0x64, 0x86, 0x12, 0xd5, 0x7e,
	0x50, 0x73, 0xff, 0x6b, 0x11, 0x28, 0x06, 0xb4, 0x09, 0x1c, 0x73, 0x63, 0x11, 0xba, 0xe3, 0xb3,
	0x7b, 0xd2, 0xec, 0x20, 0xe0, 0x25, 0x39, 0x52, 0xcc, 0xd4, 0x9e, 0x14, 0xb3, 0x9b, 0x4e, 0x8e,
	0x66, 0x89, 0x75, 0x72, 0xd4, 0xc1, 0x13, 0xfc, 0x49, 0x8a, 0x76, 0xb2, 0x8b, 0xe0, 0x9d, 0xdc,
	0x00, 0x83, 0x35, 0x64, 0x6b, 0xa2, 0xbc, 0xde, 0x68, 0x11, 0x18, 0x75, 0xb6, 0x09, 0xcc, 0xba,
	0xc1, 0x45, 0x5c, 0xf1, 0x01, 0x1e, 0xaf, 0xb1, 0xf9, 0xf6, 0x3b, 0x97, 0x5d, 0x88, 0x34, 0x98,
	0x10, 0x26, 0xd2, 0xa0, 0x91, 0xe7, 0xf0, 0x87, 0x34, 0x15, 0xe9, 0xdd, 0x7a, 0x25, 0xfc, 0x09,
	0x0f, 0x75, 0xa0, 0xb4, 0x1f, 0x9f, 0x0c, 0xc1, 0x2a, 0x9c, 0xda, 0xcb, 0x55, 0x38, 0x52, 0xb4,
	0xf4, 0xde, 0xac, 0x66, 0x81, 0x4f, 0x61, 0xef, 0x9e, 0x7c, 0x0a, 0xa3, 0x15, 0x64, 0x0d, 0x14,
	0x75, 0xf0, 0xe2, 0x3f, 0x4a, 0xd3, 0x06, 0x72, 0x11, 0xbc, 0x81, 0x0e, 0x0a, 0xbf, 0xaf, 0xdd,
	0x1a, 0xcc, 0x3e, 0xeb, 0xd6, 0xa0, 0x91, 0x17, 0xec, 0xb3, 0x34, 0x18, 0x13, 0x96, 0x74, 0x19,
	0xd5, 0xb1, 0xa5, 0xdb, 0xfb, 0xbe, 0x8d, 0xd9, 0xa7, 0x55, 0x2f, 0x63, 0x82, 0x81, 0x8a, 0x1b,
	0x62, 0xa9, 0x82, 0x36, 0x6c, 0xed, 0xd5, 0x7b, 0x9a, 0x79, 0x26, 0xc7, 0xe0, 0x38, 0x9f, 0x46,
	0xc0, 0xcc, 0x24, 0x79, 0x94, 0x19, 0x97, 0x1d, 0xdb, 0xe2, 0x15, 0x71, 0xed, 0xce, 0x26, 0x36,
	0x1d, 0x2b, 0x84, 0x3c, 0x09, 0xce, 0x26, 0xf9, 0x79, 0x45, 0x3f, 0xef, 0xed, 0xa8, 0xf7, 0xf5,
	0xb5, 0x35, 0x54, 0xb6, 0xf5, 0x4d, 0x5e, 0xce, 0x7b, 0xa0, 0xdf, 0x44, 0x75, 0x6c, 0xda, 0xc8,
	0x74, 0x0a, 0x99, 0x9e, 0xea, 0x2f, 0x2c, 0x38, 0xeb, 0x06, 0x37, 0xfa, 0xeb, 0x06, 0x37, 0xc5,
	0xa7, 0xd4, 0x1f, 0x96, 0x79, 0x03, 0x1c, 0xf3, 0x1e, 0x4a, 0x34, 0xc2, 0x6c, 0x8a, 0xbe, 0x7d,
	0xa9, 0x45, 0x60, 0xc8, 0xd3, 0x26, 0x70, 0x38, 0x38, 0x85, 0x6b, 0x8f, 0x9f, 0x67, 0xc0, 0x03,
	0xde, 0x72, 0x70, 0x22, 0x4d, 0xa6, 0xf7, 0x52, 0x93, 0x1f, 0x4a, 0xe0, 0x04, 0xf2, 0x32, 0x59,
	0xb2, 0xf1, 0x3a, 0x32, 0xbc, 0x6d, 0x6a, 0xdd, 0x11, 0xc5, 0x8f, 0x04, 0x4e, 0x56, 0x75, 0xfb,
	0x7e, 0x63, 0x55, 0x29, 0xe3, 0x1a, 0x3b, 0x7a, 0xb3, 0xff, 0x66, 0xac, 0xca, 0xba, 0xea, 0xac,
	0xbe, 0x96, 0x72, 0xc3, 0xb0, 0x5b, 0x04, 0x46, 0xde, 0xd4, 0x26, 0x70, 0xc4, 0x25, 0x18, 0xf6,
	0x38, 0x0c, 0x01, 0x63, 0x78, 0xc3, 0xb0, 0x5d, 0x49, 0x1d, 0xe7, 0xa8, 0x3b, 0x14, 0xb4, 0xb8,
	0xe0, 0xa8, 0x2a, 0x94, 0x62, 0x47, 0x56, 0x13, 0x11, 0x59, 0x85, 0xd5, 0x20, 0x9f, 0x01, 0x13,
	0xb1, 0x4e, 0x2e, 0xa8, 0x8f, 0xd2, 0x20, 0x1b, 0x59, 0x40, 0x0e, 0x96, 0x87, 0xdf, 0x7f, 0x79,
	0xb8, 0x24, 0x5e, 0x1e, 0xc6, 0x63, 0x97, 0x76, 0xaf, 0x8c, 0x32, 0x18, 0x8f, 0xf3, 0xf1, 0x2a,
	0x7e, 0xd5, 0x07, 0x4e, 0xad, 0x58, 0x55, 0xff, 0x03, 0xe0, 0x7c, 0x73, 0x4d, 0x7a, 0x81, 0xf3,
	0x7f, 0x6c, 0xa3, 0xcc, 0x07, 0x12, 0x18, 0x2d, 0x6b, 0x46, 0x45, 0x77, 0x5e, 0x52, 0x12, 0xd7,
	0xf4, 0xb5, 0x16, 0x81, 0xf1, 0xa0, 0x36, 0x81, 0xe3, 0x6e, 0xa8, 0xb1, 0x90, 0xf8, 0xec, 0x8f,
	0xf0, 0x31, 0x37, 0x83, 0x05, 0x7f, 0x57, 0x02, 0xbe, 0xaf, 0x24, 0xaa, 0xfd, 0xdd, 0x16, 0x81,
	0x71, 0x90, 0x36, 0x81, 0xf9, 0x30, 0xa7, 0x2e, 0xf5, 0x30, 0xcc, 0x47, 0xdc, 0xea, 0x14, 0xc6,
	0x25, 0xf0, 0x27, 0x5c, 0xd7, 0x0d, 0x67, 0x1f, 0xe3, 0x48, 0xe2, 0x70, 0xe1, 0x74, 0x8b, 0x40,
	0xcf, 0xd4, 0x26, 0xf0, 0x18, 0x13, 0x9d, 0x6b, 0x90, 0x8b, 0x9e, 0x8b, 0x1e, 0xd1, 0x36, 0xb1,
	0xd3, 0xa1, 0xe1, 0xe4, 0xf6, 0xfa, 0x47, 0x34, 0x21, 0xc0, 0x3f, 0xa2, 0x09, 0xdd, 0x09, 0x47,
	0x34, 0x8a, 0x0f, 0x25, 0xf4, 0x4d, 0xe0, 0x9a, 0x43, 0xb9, 0xec, 0xa3, 0x24, 0x56, 0x5a, 0x04,
	0x8a, 0xdc, 0x6d, 0x02, 0x73, 0x9d, 0x14, 0xba, 0xcc, 0xe1, 0x20, 0x45, 0x77, 0xe6, 0x6f, 0xf1,
	0x5f, 0x8e, 0xc8, 0x45, 0x53, 0x38, 0x52, 0x3f, 0xd3, 0x21, 0xf5, 0x38, 0xa5, 0xca, 0xe7, 0xc0,
	0x99, 0x04, 0xb7, 0x2f, 0xf8, 0x14, 0x98, 0x5c, 0xb1, 0xaa, 0xf7, 0x74, 0xfb, 0x7e, 0xc5, 0xd4,
	0xb6, 0x44, 0xf8, 0x3f, 0xf8, 0x22, 0xb6, 0x78, 0x5d, 0xbc, 0xa0, 0x28, 0x1d, 0x59, 0xee, 0x22,
	0x3d, 0xf2, 0x2c, 0x50, 0xba, 0x43, 0x7a, 0xb9, 0x9f, 0xff, 0xf4, 0x04, 0x48, 0xaf, 0x58, 0xd5,
	0xcc, 0xb6, 0x04, 0x4e, 0xfd, 0x5b, 0x33, 0x2a, 0x1b, 0x48, 0x7c, 0xa9, 0x3b, 0x2d, 0x3c, 0x03,
	0x08, 0xb1, 0xb9, 0xf9, 0xee, 0xb1, 0x5c, 0x03, 0x73, 0x0f, 0xbf, 0xfb, 0xf9, 0xfd, 0xd4, 0xdf,
	0xe4, 0xbf, 0xaa, 0xa2, 0xbb, 0xe9, 0x32, 0x1d, 0x58, 0x0a, 0xdc, 0x7b, 0x04, 0x29, 0x0b, 0x6e,
	0x5a, 0x62, 0x29, 0x47, 0xb1, 0xf1, 0x94, 0x13, 0xae, 0x20, 0x92, 0x29, 0x9b, 0x74, 0x60, 0x12,
	0x65, 0xc1, 0xb9, 0x3b, 0x96, 0x72, 0x14, 0x1b, 0x4f, 0x39, 0xe1, 0xd0, 0x97, 0x4c, 0xb9, 0x41,
	0x07, 0x86, 0x28, 0x7f, 0x23, 0x01, 0x39, 0x81, 0xb2, 0xd7, 0x98, 0x73, 0xdd, 0xb3, 0x61, 0x43,
	0x72, 0x0b, 0xbb, 0x1e, 0xc2, 0xe3, 0x58, 0xa0, 0x71, 0x9c, 0x97, 0xe7, 0xba, 0x8e, 0xa3, 0xc4,
	0xbe, 0xdf, 0x99, 0x2f, 0x25, 0x00, 0x43, 0xf1, 0x44, 0xb6, 0xde, 0x4a, 0x32, 0xb3, 0x30, 0x3e,
	0xf7, 0x8f, 0xdd, 0xe1, 0x79, 0x18, 0x17, 0x69, 0x18, 0xaa, 0x3c, 0x93, 0x14, 0x86, 0xbf, 0xd5,
	0xf4, 0x42, 0xf8, 0x58, 0x02, 0x23, 0xa1, 0x5e, 0xe5, 0x07, 0xf8, 0xc9, 0xe4, 0xde, 0xf3, 0x70,
	0x39, 0xa5, 0x3b, 0x1c, 0xa7, 0x3a, 0x43, 0xa9, 0xfe, 0x45, 0x3e, 0x97, 0xd4, 0x9f, 0xfc, 0x0e,
	0x2d, 0x48, 0x31, 0x74, 0x49, 0x37, 0x99, 0xdc, 0x6b, 0xaf, 0xa6, 0x18, 0x73, 0x9d, 0x95, 0x4c,
	0x91, 0xf5, 0x63, 0x0c, 0xc5, 0xd0, 0x35, 0xc8, 0x64, 0x72, 0x41, 0x5f, 0x4d, 0x31, 0xe6, 0x0c,
	0x9f, 0x4c, 0x91, 0x15, 0xdc, 0xa7, 0xf8, 0x44, 0x02, 0xf9, 0x18, 0x8a, 0x9e, 0x54, 0x67, 0xba,
	0x63, 0xe0, 0x29, 0xf5, 0xe2, 0xae, 0xe0, 0xbb, 0x13, 0xaa, 0x7f, 0x83, 0xea, 0x09, 0xf5, 0x99,
	0x04, 0x26, 0x38, 0xff, 0xd8, 0xfd, 0xec, 0x6c, 0x1c, 0xa7, 0xb8, 0x11, 0xb9, 0xcb, 0xbb, 0x1d,
	0xc1, 0x03, 0xb9, 0x4c, 0x03, 0x99, 0x97, 0x67, 0x85, 0x81, 0xf8, 0x11, 0x98, 0x1d, 0x2f, 0x28,
	0x39, 0x5b, 0xa0, 0xcc, 0x2f, 0x12, 0xf8, 0x3b, 0x8f, 0xa5, 0x9b, 0xad, 0xca, 0x95, 0x38, 0x92,
	0x5d, 0x0c, 0xce, 0x2d, 0xfd, 0x86, 0xc1, 0x3c, 0xd8, 0x65, 0x1a, 0xec, 0x55, 0xf9, 0x9f, 0xc2,
	0x60, 0xb7, 0xd8, 0x9b, 0x4a, 0x31, 0x51, 0xb3, 0x22, 0xe6, 0xfa, 0xde, 0x72, 0x0e, 0x40, 0x85,
	0xe2, 0xe3, 0x9d, 0xbc, 0xf4, 0x74, 0x27, 0x2f, 0x3d, 0xdf, 0xc9, 0x4b, 0x3f, 0xed, 0xe4, 0xa5,
	0xf7, 0x5e, 0xe4, 0x7b, 0x9e, 0xbf, 0xc8, 0xf7, 0x7c, 0xff, 0x22, 0xdf, 0xf3, 0xfa, 0x85, 0x8e,
	0x43, 0x35, 0x9b, 0xcc, 0x40, 0xb6, 0xf7, 0x73, 0xa6, 0x7c, 0x5f, 0xd3, 0x0d, 0xf5, 0x81, 0x3f,
	0x3f, 0x3d, 0x66, 0xaf, 0x1e, 0xa2, 0x7f, 0xf0, 0x3a, 0xff, 0x6b, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xe8, 0x65, 0x39, 0xd2, 0x59, 0x1f, 0x00, 0x00,
}

func (this *MsgCreateResourceNode) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgCreateResourceNode)
	if !ok {
		that2, ok := that.(MsgCreateResourceNode)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.NetworkAddress != that1.NetworkAddress {
		return false
	}
	if !this.Pubkey.Equal(that1.Pubkey) {
		return false
	}
	if !this.Value.Equal(&that1.Value) {
		return false
	}
	if this.OwnerAddress != that1.OwnerAddress {
		return false
	}
	if !this.Description.Equal(&that1.Description) {
		return false
	}
	if this.NodeType != that1.NodeType {
		return false
	}
	return true
}
func (this *MsgCreateResourceNodeResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgCreateResourceNodeResponse)
	if !ok {
		that2, ok := that.(MsgCreateResourceNodeResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *MsgCreateMetaNode) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgCreateMetaNode)
	if !ok {
		that2, ok := that.(MsgCreateMetaNode)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.NetworkAddress != that1.NetworkAddress {
		return false
	}
	if !this.Pubkey.Equal(that1.Pubkey) {
		return false
	}
	if !this.Value.Equal(&that1.Value) {
		return false
	}
	if this.OwnerAddress != that1.OwnerAddress {
		return false
	}
	if !this.Description.Equal(&that1.Description) {
		return false
	}
	return true
}
func (this *MsgCreateMetaNodeResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgCreateMetaNodeResponse)
	if !ok {
		that2, ok := that.(MsgCreateMetaNodeResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *MsgRemoveResourceNode) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgRemoveResourceNode)
	if !ok {
		that2, ok := that.(MsgRemoveResourceNode)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ResourceNodeAddress != that1.ResourceNodeAddress {
		return false
	}
	if this.OwnerAddress != that1.OwnerAddress {
		return false
	}
	return true
}
func (this *MsgRemoveResourceNodeResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgRemoveResourceNodeResponse)
	if !ok {
		that2, ok := that.(MsgRemoveResourceNodeResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *MsgRemoveMetaNode) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgRemoveMetaNode)
	if !ok {
		that2, ok := that.(MsgRemoveMetaNode)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.MetaNodeAddress != that1.MetaNodeAddress {
		return false
	}
	if this.OwnerAddress != that1.OwnerAddress {
		return false
	}
	return true
}
func (this *MsgRemoveMetaNodeResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgRemoveMetaNodeResponse)
	if !ok {
		that2, ok := that.(MsgRemoveMetaNodeResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *MsgUpdateResourceNode) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgUpdateResourceNode)
	if !ok {
		that2, ok := that.(MsgUpdateResourceNode)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Description.Equal(&that1.Description) {
		return false
	}
	if this.NetworkAddress != that1.NetworkAddress {
		return false
	}
	if this.OwnerAddress != that1.OwnerAddress {
		return false
	}
	if this.NodeType != that1.NodeType {
		return false
	}
	return true
}
func (this *MsgUpdateResourceNodeResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgUpdateResourceNodeResponse)
	if !ok {
		that2, ok := that.(MsgUpdateResourceNodeResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *MsgUpdateMetaNode) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgUpdateMetaNode)
	if !ok {
		that2, ok := that.(MsgUpdateMetaNode)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Description.Equal(&that1.Description) {
		return false
	}
	if this.NetworkAddress != that1.NetworkAddress {
		return false
	}
	if this.OwnerAddress != that1.OwnerAddress {
		return false
	}
	return true
}
func (this *MsgUpdateMetaNodeResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgUpdateMetaNodeResponse)
	if !ok {
		that2, ok := that.(MsgUpdateMetaNodeResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *MsgUpdateResourceNodeDeposit) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgUpdateResourceNodeDeposit)
	if !ok {
		that2, ok := that.(MsgUpdateResourceNodeDeposit)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.NetworkAddress != that1.NetworkAddress {
		return false
	}
	if this.OwnerAddress != that1.OwnerAddress {
		return false
	}
	if !this.DepositDelta.Equal(&that1.DepositDelta) {
		return false
	}
	return true
}
func (this *MsgUpdateResourceNodeDepositResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgUpdateResourceNodeDepositResponse)
	if !ok {
		that2, ok := that.(MsgUpdateResourceNodeDepositResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *MsgUpdateEffectiveDeposit) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgUpdateEffectiveDeposit)
	if !ok {
		that2, ok := that.(MsgUpdateEffectiveDeposit)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Reporters) != len(that1.Reporters) {
		return false
	}
	for i := range this.Reporters {
		if this.Reporters[i] != that1.Reporters[i] {
			return false
		}
	}
	if len(this.ReporterOwner) != len(that1.ReporterOwner) {
		return false
	}
	for i := range this.ReporterOwner {
		if this.ReporterOwner[i] != that1.ReporterOwner[i] {
			return false
		}
	}
	if this.NetworkAddress != that1.NetworkAddress {
		return false
	}
	if !this.EffectiveTokens.Equal(that1.EffectiveTokens) {
		return false
	}
	return true
}
func (this *MsgUpdateEffectiveDepositResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgUpdateEffectiveDepositResponse)
	if !ok {
		that2, ok := that.(MsgUpdateEffectiveDepositResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *MsgUpdateMetaNodeDeposit) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgUpdateMetaNodeDeposit)
	if !ok {
		that2, ok := that.(MsgUpdateMetaNodeDeposit)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.NetworkAddress != that1.NetworkAddress {
		return false
	}
	if this.OwnerAddress != that1.OwnerAddress {
		return false
	}
	if !this.DepositDelta.Equal(&that1.DepositDelta) {
		return false
	}
	return true
}
func (this *MsgUpdateMetaNodeDepositResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgUpdateMetaNodeDepositResponse)
	if !ok {
		that2, ok := that.(MsgUpdateMetaNodeDepositResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *MsgMetaNodeRegistrationVote) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgMetaNodeRegistrationVote)
	if !ok {
		that2, ok := that.(MsgMetaNodeRegistrationVote)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.CandidateNetworkAddress != that1.CandidateNetworkAddress {
		return false
	}
	if this.CandidateOwnerAddress != that1.CandidateOwnerAddress {
		return false
	}
	if this.Opinion != that1.Opinion {
		return false
	}
	if this.VoterNetworkAddress != that1.VoterNetworkAddress {
		return false
	}
	if this.VoterOwnerAddress != that1.VoterOwnerAddress {
		return false
	}
	return true
}
func (this *MsgMetaNodeRegistrationVoteResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgMetaNodeRegistrationVoteResponse)
	if !ok {
		that2, ok := that.(MsgMetaNodeRegistrationVoteResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *MsgWithdrawMetaNodeRegistrationDeposit) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgWithdrawMetaNodeRegistrationDeposit)
	if !ok {
		that2, ok := that.(MsgWithdrawMetaNodeRegistrationDeposit)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.NetworkAddress != that1.NetworkAddress {
		return false
	}
	if this.OwnerAddress != that1.OwnerAddress {
		return false
	}
	return true
}
func (this *MsgWithdrawMetaNodeRegistrationDepositResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgWithdrawMetaNodeRegistrationDepositResponse)
	if !ok {
		that2, ok := that.(MsgWithdrawMetaNodeRegistrationDepositResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// CreateResourceNode defines a method for creating a new resource node.
	HandleMsgCreateResourceNode(ctx context.Context, in *MsgCreateResourceNode, opts ...grpc.CallOption) (*MsgCreateResourceNodeResponse, error)
	HandleMsgRemoveResourceNode(ctx context.Context, in *MsgRemoveResourceNode, opts ...grpc.CallOption) (*MsgRemoveResourceNodeResponse, error)
	HandleMsgUpdateResourceNode(ctx context.Context, in *MsgUpdateResourceNode, opts ...grpc.CallOption) (*MsgUpdateResourceNodeResponse, error)
	HandleMsgUpdateResourceNodeDeposit(ctx context.Context, in *MsgUpdateResourceNodeDeposit, opts ...grpc.CallOption) (*MsgUpdateResourceNodeDepositResponse, error)
	HandleMsgUpdateEffectiveDeposit(ctx context.Context, in *MsgUpdateEffectiveDeposit, opts ...grpc.CallOption) (*MsgUpdateEffectiveDepositResponse, error)
	HandleMsgCreateMetaNode(ctx context.Context, in *MsgCreateMetaNode, opts ...grpc.CallOption) (*MsgCreateMetaNodeResponse, error)
	HandleMsgRemoveMetaNode(ctx context.Context, in *MsgRemoveMetaNode, opts ...grpc.CallOption) (*MsgRemoveMetaNodeResponse, error)
	HandleMsgUpdateMetaNode(ctx context.Context, in *MsgUpdateMetaNode, opts ...grpc.CallOption) (*MsgUpdateMetaNodeResponse, error)
	HandleMsgUpdateMetaNodeDeposit(ctx context.Context, in *MsgUpdateMetaNodeDeposit, opts ...grpc.CallOption) (*MsgUpdateMetaNodeDepositResponse, error)
	HandleMsgMetaNodeRegistrationVote(ctx context.Context, in *MsgMetaNodeRegistrationVote, opts ...grpc.CallOption) (*MsgMetaNodeRegistrationVoteResponse, error)
	HandleMsgWithdrawMetaNodeRegistrationDeposit(ctx context.Context, in *MsgWithdrawMetaNodeRegistrationDeposit, opts ...grpc.CallOption) (*MsgWithdrawMetaNodeRegistrationDepositResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) HandleMsgCreateResourceNode(ctx context.Context, in *MsgCreateResourceNode, opts ...grpc.CallOption) (*MsgCreateResourceNodeResponse, error) {
	out := new(MsgCreateResourceNodeResponse)
	err := c.cc.Invoke(ctx, "/stratos.register.v1.Msg/HandleMsgCreateResourceNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) HandleMsgRemoveResourceNode(ctx context.Context, in *MsgRemoveResourceNode, opts ...grpc.CallOption) (*MsgRemoveResourceNodeResponse, error) {
	out := new(MsgRemoveResourceNodeResponse)
	err := c.cc.Invoke(ctx, "/stratos.register.v1.Msg/HandleMsgRemoveResourceNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) HandleMsgUpdateResourceNode(ctx context.Context, in *MsgUpdateResourceNode, opts ...grpc.CallOption) (*MsgUpdateResourceNodeResponse, error) {
	out := new(MsgUpdateResourceNodeResponse)
	err := c.cc.Invoke(ctx, "/stratos.register.v1.Msg/HandleMsgUpdateResourceNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) HandleMsgUpdateResourceNodeDeposit(ctx context.Context, in *MsgUpdateResourceNodeDeposit, opts ...grpc.CallOption) (*MsgUpdateResourceNodeDepositResponse, error) {
	out := new(MsgUpdateResourceNodeDepositResponse)
	err := c.cc.Invoke(ctx, "/stratos.register.v1.Msg/HandleMsgUpdateResourceNodeDeposit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) HandleMsgUpdateEffectiveDeposit(ctx context.Context, in *MsgUpdateEffectiveDeposit, opts ...grpc.CallOption) (*MsgUpdateEffectiveDepositResponse, error) {
	out := new(MsgUpdateEffectiveDepositResponse)
	err := c.cc.Invoke(ctx, "/stratos.register.v1.Msg/HandleMsgUpdateEffectiveDeposit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) HandleMsgCreateMetaNode(ctx context.Context, in *MsgCreateMetaNode, opts ...grpc.CallOption) (*MsgCreateMetaNodeResponse, error) {
	out := new(MsgCreateMetaNodeResponse)
	err := c.cc.Invoke(ctx, "/stratos.register.v1.Msg/HandleMsgCreateMetaNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) HandleMsgRemoveMetaNode(ctx context.Context, in *MsgRemoveMetaNode, opts ...grpc.CallOption) (*MsgRemoveMetaNodeResponse, error) {
	out := new(MsgRemoveMetaNodeResponse)
	err := c.cc.Invoke(ctx, "/stratos.register.v1.Msg/HandleMsgRemoveMetaNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) HandleMsgUpdateMetaNode(ctx context.Context, in *MsgUpdateMetaNode, opts ...grpc.CallOption) (*MsgUpdateMetaNodeResponse, error) {
	out := new(MsgUpdateMetaNodeResponse)
	err := c.cc.Invoke(ctx, "/stratos.register.v1.Msg/HandleMsgUpdateMetaNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) HandleMsgUpdateMetaNodeDeposit(ctx context.Context, in *MsgUpdateMetaNodeDeposit, opts ...grpc.CallOption) (*MsgUpdateMetaNodeDepositResponse, error) {
	out := new(MsgUpdateMetaNodeDepositResponse)
	err := c.cc.Invoke(ctx, "/stratos.register.v1.Msg/HandleMsgUpdateMetaNodeDeposit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) HandleMsgMetaNodeRegistrationVote(ctx context.Context, in *MsgMetaNodeRegistrationVote, opts ...grpc.CallOption) (*MsgMetaNodeRegistrationVoteResponse, error) {
	out := new(MsgMetaNodeRegistrationVoteResponse)
	err := c.cc.Invoke(ctx, "/stratos.register.v1.Msg/HandleMsgMetaNodeRegistrationVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) HandleMsgWithdrawMetaNodeRegistrationDeposit(ctx context.Context, in *MsgWithdrawMetaNodeRegistrationDeposit, opts ...grpc.CallOption) (*MsgWithdrawMetaNodeRegistrationDepositResponse, error) {
	out := new(MsgWithdrawMetaNodeRegistrationDepositResponse)
	err := c.cc.Invoke(ctx, "/stratos.register.v1.Msg/HandleMsgWithdrawMetaNodeRegistrationDeposit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// CreateResourceNode defines a method for creating a new resource node.
	HandleMsgCreateResourceNode(context.Context, *MsgCreateResourceNode) (*MsgCreateResourceNodeResponse, error)
	HandleMsgRemoveResourceNode(context.Context, *MsgRemoveResourceNode) (*MsgRemoveResourceNodeResponse, error)
	HandleMsgUpdateResourceNode(context.Context, *MsgUpdateResourceNode) (*MsgUpdateResourceNodeResponse, error)
	HandleMsgUpdateResourceNodeDeposit(context.Context, *MsgUpdateResourceNodeDeposit) (*MsgUpdateResourceNodeDepositResponse, error)
	HandleMsgUpdateEffectiveDeposit(context.Context, *MsgUpdateEffectiveDeposit) (*MsgUpdateEffectiveDepositResponse, error)
	HandleMsgCreateMetaNode(context.Context, *MsgCreateMetaNode) (*MsgCreateMetaNodeResponse, error)
	HandleMsgRemoveMetaNode(context.Context, *MsgRemoveMetaNode) (*MsgRemoveMetaNodeResponse, error)
	HandleMsgUpdateMetaNode(context.Context, *MsgUpdateMetaNode) (*MsgUpdateMetaNodeResponse, error)
	HandleMsgUpdateMetaNodeDeposit(context.Context, *MsgUpdateMetaNodeDeposit) (*MsgUpdateMetaNodeDepositResponse, error)
	HandleMsgMetaNodeRegistrationVote(context.Context, *MsgMetaNodeRegistrationVote) (*MsgMetaNodeRegistrationVoteResponse, error)
	HandleMsgWithdrawMetaNodeRegistrationDeposit(context.Context, *MsgWithdrawMetaNodeRegistrationDeposit) (*MsgWithdrawMetaNodeRegistrationDepositResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) HandleMsgCreateResourceNode(ctx context.Context, req *MsgCreateResourceNode) (*MsgCreateResourceNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleMsgCreateResourceNode not implemented")
}
func (*UnimplementedMsgServer) HandleMsgRemoveResourceNode(ctx context.Context, req *MsgRemoveResourceNode) (*MsgRemoveResourceNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleMsgRemoveResourceNode not implemented")
}
func (*UnimplementedMsgServer) HandleMsgUpdateResourceNode(ctx context.Context, req *MsgUpdateResourceNode) (*MsgUpdateResourceNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleMsgUpdateResourceNode not implemented")
}
func (*UnimplementedMsgServer) HandleMsgUpdateResourceNodeDeposit(ctx context.Context, req *MsgUpdateResourceNodeDeposit) (*MsgUpdateResourceNodeDepositResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleMsgUpdateResourceNodeDeposit not implemented")
}
func (*UnimplementedMsgServer) HandleMsgUpdateEffectiveDeposit(ctx context.Context, req *MsgUpdateEffectiveDeposit) (*MsgUpdateEffectiveDepositResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleMsgUpdateEffectiveDeposit not implemented")
}
func (*UnimplementedMsgServer) HandleMsgCreateMetaNode(ctx context.Context, req *MsgCreateMetaNode) (*MsgCreateMetaNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleMsgCreateMetaNode not implemented")
}
func (*UnimplementedMsgServer) HandleMsgRemoveMetaNode(ctx context.Context, req *MsgRemoveMetaNode) (*MsgRemoveMetaNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleMsgRemoveMetaNode not implemented")
}
func (*UnimplementedMsgServer) HandleMsgUpdateMetaNode(ctx context.Context, req *MsgUpdateMetaNode) (*MsgUpdateMetaNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleMsgUpdateMetaNode not implemented")
}
func (*UnimplementedMsgServer) HandleMsgUpdateMetaNodeDeposit(ctx context.Context, req *MsgUpdateMetaNodeDeposit) (*MsgUpdateMetaNodeDepositResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleMsgUpdateMetaNodeDeposit not implemented")
}
func (*UnimplementedMsgServer) HandleMsgMetaNodeRegistrationVote(ctx context.Context, req *MsgMetaNodeRegistrationVote) (*MsgMetaNodeRegistrationVoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleMsgMetaNodeRegistrationVote not implemented")
}
func (*UnimplementedMsgServer) HandleMsgWithdrawMetaNodeRegistrationDeposit(ctx context.Context, req *MsgWithdrawMetaNodeRegistrationDeposit) (*MsgWithdrawMetaNodeRegistrationDepositResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleMsgWithdrawMetaNodeRegistrationDeposit not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_HandleMsgCreateResourceNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateResourceNode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).HandleMsgCreateResourceNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stratos.register.v1.Msg/HandleMsgCreateResourceNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).HandleMsgCreateResourceNode(ctx, req.(*MsgCreateResourceNode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_HandleMsgRemoveResourceNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveResourceNode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).HandleMsgRemoveResourceNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stratos.register.v1.Msg/HandleMsgRemoveResourceNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).HandleMsgRemoveResourceNode(ctx, req.(*MsgRemoveResourceNode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_HandleMsgUpdateResourceNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateResourceNode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).HandleMsgUpdateResourceNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stratos.register.v1.Msg/HandleMsgUpdateResourceNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).HandleMsgUpdateResourceNode(ctx, req.(*MsgUpdateResourceNode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_HandleMsgUpdateResourceNodeDeposit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateResourceNodeDeposit)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).HandleMsgUpdateResourceNodeDeposit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stratos.register.v1.Msg/HandleMsgUpdateResourceNodeDeposit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).HandleMsgUpdateResourceNodeDeposit(ctx, req.(*MsgUpdateResourceNodeDeposit))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_HandleMsgUpdateEffectiveDeposit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateEffectiveDeposit)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).HandleMsgUpdateEffectiveDeposit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stratos.register.v1.Msg/HandleMsgUpdateEffectiveDeposit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).HandleMsgUpdateEffectiveDeposit(ctx, req.(*MsgUpdateEffectiveDeposit))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_HandleMsgCreateMetaNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateMetaNode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).HandleMsgCreateMetaNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stratos.register.v1.Msg/HandleMsgCreateMetaNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).HandleMsgCreateMetaNode(ctx, req.(*MsgCreateMetaNode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_HandleMsgRemoveMetaNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveMetaNode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).HandleMsgRemoveMetaNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stratos.register.v1.Msg/HandleMsgRemoveMetaNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).HandleMsgRemoveMetaNode(ctx, req.(*MsgRemoveMetaNode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_HandleMsgUpdateMetaNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateMetaNode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).HandleMsgUpdateMetaNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stratos.register.v1.Msg/HandleMsgUpdateMetaNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).HandleMsgUpdateMetaNode(ctx, req.(*MsgUpdateMetaNode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_HandleMsgUpdateMetaNodeDeposit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateMetaNodeDeposit)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).HandleMsgUpdateMetaNodeDeposit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stratos.register.v1.Msg/HandleMsgUpdateMetaNodeDeposit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).HandleMsgUpdateMetaNodeDeposit(ctx, req.(*MsgUpdateMetaNodeDeposit))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_HandleMsgMetaNodeRegistrationVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMetaNodeRegistrationVote)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).HandleMsgMetaNodeRegistrationVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stratos.register.v1.Msg/HandleMsgMetaNodeRegistrationVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).HandleMsgMetaNodeRegistrationVote(ctx, req.(*MsgMetaNodeRegistrationVote))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_HandleMsgWithdrawMetaNodeRegistrationDeposit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgWithdrawMetaNodeRegistrationDeposit)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).HandleMsgWithdrawMetaNodeRegistrationDeposit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stratos.register.v1.Msg/HandleMsgWithdrawMetaNodeRegistrationDeposit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).HandleMsgWithdrawMetaNodeRegistrationDeposit(ctx, req.(*MsgWithdrawMetaNodeRegistrationDeposit))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stratos.register.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandleMsgCreateResourceNode",
			Handler:    _Msg_HandleMsgCreateResourceNode_Handler,
		},
		{
			MethodName: "HandleMsgRemoveResourceNode",
			Handler:    _Msg_HandleMsgRemoveResourceNode_Handler,
		},
		{
			MethodName: "HandleMsgUpdateResourceNode",
			Handler:    _Msg_HandleMsgUpdateResourceNode_Handler,
		},
		{
			MethodName: "HandleMsgUpdateResourceNodeDeposit",
			Handler:    _Msg_HandleMsgUpdateResourceNodeDeposit_Handler,
		},
		{
			MethodName: "HandleMsgUpdateEffectiveDeposit",
			Handler:    _Msg_HandleMsgUpdateEffectiveDeposit_Handler,
		},
		{
			MethodName: "HandleMsgCreateMetaNode",
			Handler:    _Msg_HandleMsgCreateMetaNode_Handler,
		},
		{
			MethodName: "HandleMsgRemoveMetaNode",
			Handler:    _Msg_HandleMsgRemoveMetaNode_Handler,
		},
		{
			MethodName: "HandleMsgUpdateMetaNode",
			Handler:    _Msg_HandleMsgUpdateMetaNode_Handler,
		},
		{
			MethodName: "HandleMsgUpdateMetaNodeDeposit",
			Handler:    _Msg_HandleMsgUpdateMetaNodeDeposit_Handler,
		},
		{
			MethodName: "HandleMsgMetaNodeRegistrationVote",
			Handler:    _Msg_HandleMsgMetaNodeRegistrationVote_Handler,
		},
		{
			MethodName: "HandleMsgWithdrawMetaNodeRegistrationDeposit",
			Handler:    _Msg_HandleMsgWithdrawMetaNodeRegistrationDeposit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stratos/register/v1/tx.proto",
}

func (m *MsgCreateResourceNode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateResourceNode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateResourceNode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.NodeType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.NodeType))
		i--
		dAtA[i] = 0x30
	}
	{
		size, err := m.Description.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x22
	}
	{
		size, err := m.Value.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if m.Pubkey != nil {
		{
			size, err := m.Pubkey.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.NetworkAddress) > 0 {
		i -= len(m.NetworkAddress)
		copy(dAtA[i:], m.NetworkAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NetworkAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateResourceNodeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateResourceNodeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateResourceNodeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateMetaNode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMetaNode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMetaNode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Description.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x22
	}
	{
		size, err := m.Value.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if m.Pubkey != nil {
		{
			size, err := m.Pubkey.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.NetworkAddress) > 0 {
		i -= len(m.NetworkAddress)
		copy(dAtA[i:], m.NetworkAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NetworkAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateMetaNodeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMetaNodeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMetaNodeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveResourceNode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveResourceNode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveResourceNode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ResourceNodeAddress) > 0 {
		i -= len(m.ResourceNodeAddress)
		copy(dAtA[i:], m.ResourceNodeAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ResourceNodeAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveResourceNodeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveResourceNodeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveResourceNodeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveMetaNode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveMetaNode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveMetaNode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MetaNodeAddress) > 0 {
		i -= len(m.MetaNodeAddress)
		copy(dAtA[i:], m.MetaNodeAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MetaNodeAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveMetaNodeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveMetaNodeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveMetaNodeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateResourceNode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateResourceNode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateResourceNode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.NodeType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.NodeType))
		i--
		dAtA[i] = 0x20
	}
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NetworkAddress) > 0 {
		i -= len(m.NetworkAddress)
		copy(dAtA[i:], m.NetworkAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NetworkAddress)))
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.Description.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgUpdateResourceNodeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateResourceNodeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateResourceNodeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMetaNode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMetaNode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMetaNode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NetworkAddress) > 0 {
		i -= len(m.NetworkAddress)
		copy(dAtA[i:], m.NetworkAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NetworkAddress)))
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.Description.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMetaNodeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMetaNodeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMetaNodeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateResourceNodeDeposit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateResourceNodeDeposit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateResourceNodeDeposit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.DepositDelta.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.NetworkAddress) > 0 {
		i -= len(m.NetworkAddress)
		copy(dAtA[i:], m.NetworkAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NetworkAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateResourceNodeDepositResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateResourceNodeDepositResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateResourceNodeDepositResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateEffectiveDeposit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateEffectiveDeposit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateEffectiveDeposit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.EffectiveTokens.Size()
		i -= size
		if _, err := m.EffectiveTokens.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.NetworkAddress) > 0 {
		i -= len(m.NetworkAddress)
		copy(dAtA[i:], m.NetworkAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NetworkAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ReporterOwner) > 0 {
		for iNdEx := len(m.ReporterOwner) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ReporterOwner[iNdEx])
			copy(dAtA[i:], m.ReporterOwner[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.ReporterOwner[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Reporters) > 0 {
		for iNdEx := len(m.Reporters) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Reporters[iNdEx])
			copy(dAtA[i:], m.Reporters[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Reporters[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateEffectiveDepositResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateEffectiveDepositResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateEffectiveDepositResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMetaNodeDeposit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMetaNodeDeposit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMetaNodeDeposit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.DepositDelta.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.NetworkAddress) > 0 {
		i -= len(m.NetworkAddress)
		copy(dAtA[i:], m.NetworkAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NetworkAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMetaNodeDepositResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMetaNodeDepositResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMetaNodeDepositResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMetaNodeRegistrationVote) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMetaNodeRegistrationVote) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMetaNodeRegistrationVote) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.VoterOwnerAddress) > 0 {
		i -= len(m.VoterOwnerAddress)
		copy(dAtA[i:], m.VoterOwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.VoterOwnerAddress)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.VoterNetworkAddress) > 0 {
		i -= len(m.VoterNetworkAddress)
		copy(dAtA[i:], m.VoterNetworkAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.VoterNetworkAddress)))
		i--
		dAtA[i] = 0x22
	}
	if m.Opinion {
		i--
		if m.Opinion {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.CandidateOwnerAddress) > 0 {
		i -= len(m.CandidateOwnerAddress)
		copy(dAtA[i:], m.CandidateOwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CandidateOwnerAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.CandidateNetworkAddress) > 0 {
		i -= len(m.CandidateNetworkAddress)
		copy(dAtA[i:], m.CandidateNetworkAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CandidateNetworkAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMetaNodeRegistrationVoteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMetaNodeRegistrationVoteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMetaNodeRegistrationVoteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgWithdrawMetaNodeRegistrationDeposit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithdrawMetaNodeRegistrationDeposit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithdrawMetaNodeRegistrationDeposit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.NetworkAddress) > 0 {
		i -= len(m.NetworkAddress)
		copy(dAtA[i:], m.NetworkAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NetworkAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgWithdrawMetaNodeRegistrationDepositResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithdrawMetaNodeRegistrationDepositResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithdrawMetaNodeRegistrationDepositResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateResourceNode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NetworkAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Pubkey != nil {
		l = m.Pubkey.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Value.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Description.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.NodeType != 0 {
		n += 1 + sovTx(uint64(m.NodeType))
	}
	return n
}

func (m *MsgCreateResourceNodeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateMetaNode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NetworkAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Pubkey != nil {
		l = m.Pubkey.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Value.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Description.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgCreateMetaNodeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveResourceNode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceNodeAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveResourceNodeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveMetaNode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MetaNodeAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveMetaNodeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateResourceNode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Description.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.NetworkAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.NodeType != 0 {
		n += 1 + sovTx(uint64(m.NodeType))
	}
	return n
}

func (m *MsgUpdateResourceNodeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateMetaNode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Description.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.NetworkAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateMetaNodeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateResourceNodeDeposit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NetworkAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.DepositDelta.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateResourceNodeDepositResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateEffectiveDeposit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Reporters) > 0 {
		for _, s := range m.Reporters {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.ReporterOwner) > 0 {
		for _, s := range m.ReporterOwner {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.NetworkAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.EffectiveTokens.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateEffectiveDepositResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateMetaNodeDeposit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NetworkAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.DepositDelta.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateMetaNodeDepositResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMetaNodeRegistrationVote) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CandidateNetworkAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CandidateOwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Opinion {
		n += 2
	}
	l = len(m.VoterNetworkAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.VoterOwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgMetaNodeRegistrationVoteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgWithdrawMetaNodeRegistrationDeposit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NetworkAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgWithdrawMetaNodeRegistrationDepositResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateResourceNode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateResourceNode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateResourceNode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pubkey", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pubkey == nil {
				m.Pubkey = &types.Any{}
			}
			if err := m.Pubkey.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Value.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Description.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeType", wireType)
			}
			m.NodeType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NodeType |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateResourceNodeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateResourceNodeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateResourceNodeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMetaNode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMetaNode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMetaNode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pubkey", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pubkey == nil {
				m.Pubkey = &types.Any{}
			}
			if err := m.Pubkey.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Value.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Description.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMetaNodeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMetaNodeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMetaNodeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveResourceNode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveResourceNode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveResourceNode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceNodeAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceNodeAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveResourceNodeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveResourceNodeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveResourceNodeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveMetaNode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveMetaNode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveMetaNode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetaNodeAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetaNodeAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveMetaNodeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveMetaNodeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveMetaNodeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateResourceNode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateResourceNode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateResourceNode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Description.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeType", wireType)
			}
			m.NodeType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NodeType |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateResourceNodeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateResourceNodeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateResourceNodeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMetaNode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMetaNode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMetaNode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Description.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMetaNodeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMetaNodeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMetaNodeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateResourceNodeDeposit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateResourceNodeDeposit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateResourceNodeDeposit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositDelta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DepositDelta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateResourceNodeDepositResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateResourceNodeDepositResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateResourceNodeDepositResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateEffectiveDeposit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateEffectiveDeposit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateEffectiveDeposit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reporters", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reporters = append(m.Reporters, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReporterOwner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReporterOwner = append(m.ReporterOwner, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EffectiveTokens", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.EffectiveTokens.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateEffectiveDepositResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateEffectiveDepositResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateEffectiveDepositResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMetaNodeDeposit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMetaNodeDeposit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMetaNodeDeposit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositDelta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DepositDelta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMetaNodeDepositResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMetaNodeDepositResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMetaNodeDepositResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMetaNodeRegistrationVote) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMetaNodeRegistrationVote: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMetaNodeRegistrationVote: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CandidateNetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CandidateNetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CandidateOwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CandidateOwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Opinion", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Opinion = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoterNetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VoterNetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoterOwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VoterOwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMetaNodeRegistrationVoteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMetaNodeRegistrationVoteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMetaNodeRegistrationVoteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWithdrawMetaNodeRegistrationDeposit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithdrawMetaNodeRegistrationDeposit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithdrawMetaNodeRegistrationDeposit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWithdrawMetaNodeRegistrationDepositResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithdrawMetaNodeRegistrationDepositResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithdrawMetaNodeRegistrationDepositResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
